正则表达式
正则表达式是由元字符，普通字符组成；元字符是语法，普通字符是单词；单词加语法组成语句

元字符有：
1、.号匹配除了换行符以外的任意字符
	特殊：在字符组内，.号表示字符.
2、起始^，表示已一个字符作为一行开头
	特殊：在字符组内，[^...]表示排除出现过的字符，且[^...]不能匹配空
3、结束$，表示已一个字符作为一行结束
	特殊：
4、字符组[...]，表示括号内任意字符之一
	特殊：[1-9]中的-是连字符
	特殊：
5、|多选，例：gray|grey
	特殊：如果要将锚定元字符作用于每一个多选上，则要用()括起来，^(a|b|c)表示以a或b或c开头的
6、单词边界<>，\<cat\>表示匹配cat这个单词
	特殊：一定要结合\
7、量词（重复出现）
	？：只作用于出现在？前面的字符，表示出现0次或1次
	+：只作用于出现在+前面的字符，表示出现1次或多次
	*：只作用于出现在*前面的字符，表示出现任意次
	{min, max}：只作用于出现在{}前面的的字符，表示出现次数的范围
		特殊：这些量词要作用于多个字符时，要通过括号()来改变作用域
8、() 反向引用
	括号能记忆其中的子表达式匹配的文本，\1能表示从左到右第一个()内匹配的文本
	自己指定子表达式的组名：例如(?<Word>\w+)，这样就把\w+的组名指定为Word了，使用\k<Word>引用这个分组捕获的内容
	特殊：(?:exp)匹配exp,不捕获匹配的文本，也不给此分组分配组号

9、\转义，将元字符的特殊意义取消，成为普通字符
	例如：ega\.com

10、
	\b：单词边界
	\d: 一位数字
	\s：任意的空白符，包括空格，制表符(Tab)，换行符，中文全角空格等
	\w：字母或数字或下划线或汉字等
11、反义
	\W：匹配任意不是字母，数字，下划线，汉字的字符
	\S：匹配任意不是空白符的字符
	\D：匹配任意非数字的字符
	\B：匹配不是单词开头或结束的位置	
12、断言
	像^、$、\b、<一样，用于指定一个位置，这个位置满足一定的条件就叫断言。
	- 查找在某些内容(但并不包括这些内容)之前或之后的东西
	- 零宽意思是不需要像[^a]字符组一样需要占位置
	- 零宽断言
		- (?=exp)
			比如\b\w+(?=ing\b)：匹配以ing结尾的单词的前面部分(除了ing以外的部分)，如查找I'm singing while you're dancing.时，它会匹配sing和danc
		- (?<=exp)
			比如比如(?<=\bre)\w+\b：匹配以re开头的单词的后半部分(除了re以外的部分)，例如在查找reading a book时，它匹配ading
	- 负向零宽断言
		- 确保某个字符没有出现，但并不想去匹配它 
		- (?!exp)
			例如：\d{3}(?!\d)匹配三位数字，而且这三位数字的后面不能是数字
		- (?<!exp)
			例如：(?<![a-z])\d{7}匹配前面不是小写字母的七位数字
13、贪婪和懒惰
	- 默认匹配尽可能多的字符
	- 懒惰匹配模式
		- *？：重复任意次，但尽可能少重复
		- +？：重复1次或更多次，但尽可能少重复
		- ?? : 重复0次或1次，但尽可能少重复
		- {n,m}?: 重复n到m次，但尽可能少重复
		- {n,}?: 重复n次以上，但尽可能少重复

	
